<li>
	<span class="suiRoleUser">
	<%- if role.principal_over_all? -%>
	  All <%= role.principal_type.to_s.pluralize -%>
	<%- elsif role.principal_instance_exists? -%>
	  <%= SanctionUi.eval_name(role.principal) %>
	<% else -%>
	  Invalid principal for <%= role.principal_type %>.<%= role.principal_id %>
	<% end -%>
	
	<%# If there is more than one type render the principal's humanized class name -%>
	<% if role_definition.principals.length > 1 -%>
		<span class="suiRoleUserAltName">(<%= role.principal_type.underscore.humanize %>)</span>
	<% end -%>
	</span>

<%# If global, show link to remove, otherwise render the permissionables the role extends over -%>
<% unless role_definition.global? -%>
	<span class="suiRolePermissionbleDirection"><%= sui_label :over -%></span>
	<% if role.permissionable_over_all? -%>
	   <span class="suiPermissionable">all <%= role.permissionable_type.to_s.pluralize -%></span>
	<% elsif role.permissionable_instance_exists? -%>
		<span class="suiPermissionable"><%= SanctionUi.eval_name(role.permissionable) -%>
			<% if role_definition.principals.length > 1 -%>
					<span class="suiPermessionableAltName">(<%= role.permissionable_type.underscore.humanize %>)</span>
			<% end -%>
		</span>
  <% else -%>
    <span class="suiInvalidPermissionable">Invalid permissionable for <%= role.permissionable_type %>.<%= role.permissionable_id %></span>
	<% end -%>	
<% end -%>

<% if action_allowed?(:can_remove_role, :role => role) -%>
 	<span class="suiRemovePermissionableLink"><%= link_to sui_label(:can_remove_role), sanction_ui_role_path(role), :method => :delete, :confirm => sui_label(:confirm_remove_role) %></span>
<% end -%>
</li>
