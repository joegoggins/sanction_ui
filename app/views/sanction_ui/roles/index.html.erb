<%#
Renders a nested list like:
ROLE: Super user
  joe
ROLE: Reader
  matt
    Access over all Magazines
ROLE: Editor
  pete
    Wall Street Journal
    The Economist asf
ROLE: Writer
ROLE: Owner
ROLE: Boss
  matt
    joe (User)




suiRolesList
  suiPrincipalList
    suiPermissionalblesList



-%>
<%

def non_global_role_instances_for_role_name
end
%>

<div class="suiContainer">
  <%= render :partial => "header", :locals => {:roles => @roles} -%>
  <ul class="suiRolesList">
  <% Sanction::Role::Definition.names.each do |role_name| # [:super_user, :writer, :viewer] -%>
	<%
	# Helper vars
    @is_global = Sanction::Role::Definition.with(role_name).first.global?
    @global_role_instances = if @is_global 
	    @roles.find_all {|r| r.name.to_sym == role_name}
	  else
		[]
	  end
    -%>
    <li id="suiRole<%= role_name.to_s %>">
      <span class="suiRoleName">
        <%= render :partial => "role_name", :locals => {:role_name => role_name} -%>
        <% unless @global_role_instances.empty? -%>
          <%= render :partial => 'global_label', :locals => {:role_name => role_name} %>
	    <% end -%>
      </span>
      <% if @is_global %>
        <% if @global_role_instances.empty? -%>
          <%= render :partial => 'no_principals_for_role', :locals => {:role_name => role_name} %>
  	    <% else -%>
          <ul class="suiPrincipalList">
	      <% @global_role_instances.each do |role| -%>
            <li><%= render :partial => "principal_name", :locals => {:role => role} -%></li>	  
	      <% end -%>
          </ul><%# end of suiPrincipalList%>
        <% end -%>
      <% else -%>
         NON GLOBAL
      <% end -%>
      </li><%# end of <li id="suiRole" %>
  <% 

  def s(rd,pr,pe)
		actual_roles = @roles.find_all {|r|
	         r.name.to_sym == role_def.name && 
	         r.principal_type.to_s == principal_class &&
	         r.permissionable_type.to_s == permissionable_class
	      }
	      # Sorting is key here, so we always render in deterministic order
	      actual_roles.sort! {|a,b| "#{a.principal_type} #{a.permissionable_type}" <=> "#{b.principal_type} #{b.permissionable_type}"}
  end

  def non_global_roles_helper(role_name)
	Sanction::Role::Definition.with(role_name).each do |role_def| 
	  role_def.principals.each do |principal_class| # ["User", "ApiUser"]
	    role_def.permissionables.each do |permissionable_class| # ["Magazine", "User"] 
	      yield role_def, principal_class, permissionable_class
	    end
	  end
	end
  end

%>

    <% non_global_roles_helper(role_name) do |role_def, principal_class, permissionable_class| -%>

	<% end -%>

  <% end -%><%# end of the top level list %>
  </ul> <%# end of suiRolesList -%>
</div> <%# end of suiContainer -%>
<%= render :partial => 'footer', :locals => {:roles => @roles} -%>
